console.log("CONTROL PAGE LOADING")
var processInputBuffer = function(){
  if(inBattle) { // Battle controls
    if((keys_pressed.indexOf(66) != -1) && (keys_pressed_checker.indexOf(66) === -1) ) {
      keys_pressed_checker.push(66);
      slashes.push(new Slash(your_char.enemyTarget));
      your_char.attackEnemy(your_char.enemyTarget);
    }
  } else { // Field controls
      if (keys_pressed.indexOf(79) != -1) {
        inBattle = true; // TODO: remove later
      } else if (keys_pressed.indexOf(16) != -1) {
        if (keys_pressed.indexOf(38) != -1) {
          your_char.pos_y--;
        };
        if (keys_pressed.indexOf(40) != -1) {
          your_char.pos_y++;
        };
        if (keys_pressed.indexOf(37) != -1) {
          your_char.pos_x--;
        };
        if (keys_pressed.indexOf(39) != -1) {
          your_char.pos_x++;
        };
      } else {
        if (keys_pressed.indexOf(38) != -1) {
          your_char.pos_y-= your_char.speed;
        };
        if (keys_pressed.indexOf(40) != -1) {
          your_char.pos_y+= your_char.speed;
        };
        if (keys_pressed.indexOf(37) != -1) {
          your_char.pos_x-= your_char.speed;
        };
        if (keys_pressed.indexOf(39) != -1) {
          your_char.pos_x+= your_char.speed;
        };
      };
    }
};

var allowInput = function() {
  $(document).keydown(function(e){
    e.preventDefault();
    if(keys_pressed.indexOf(e.which) === -1) {
      keys_pressed.push(e.which);
    };
    console.log(keys_pressed);
  });
  $(document).keyup(function(e){
    e.preventDefault();
    if( (can_attack === false) && (e.which === 66)) {
      can_attack = true;
    }
    keys_pressed = keys_pressed.filter(function(keycode){
      return keycode != e.which;
    });
    keys_pressed_checker = keys_pressed_checker.filter(function(keycode){
      return keycode != e.which;
    });
  });
  setInterval(processInputBuffer, FRAME_RATE/2);
};



var clickBuffer = function(x, y){
  var canvas = document.getElementById('game_screen');
  var context = canvas.getContext('2d');
  if (clicked.indexOf("yourself") != -1 ) {
    context.drawImage(slime_stand01, clickLocation[0], clickLocation[1])
  } else if (clicked.indexOf("other") != -1 ) {
    context.drawImage(slime_attack01, clickLocation[0], clickLocation[1])
  }
}

var allowClick = function() {
  //click listener
  document.getElementById('game_screen').addEventListener('click', function(e) {
    global_x = e.pageX + backgroundScrollX - 5 - $('#game_screen').offset().left;
    global_y = e.pageY + backgroundScrollY - 5 - $('#game_screen').offset().top;
    // x and y relative to canvas
    var x = e.pageX - 5 - $('#game_screen').offset().left;
    var y = e.pageY - 5 - $('#game_screen').offset().top;
    console.log(global_x, global_y);
    clickLocation = [];
    clickLocation.push(x);
    clickLocation.push(y);
    // click your_char
    if((global_x >= your_char.pos_x && global_x <= your_char.pos_x + 25) && (global_y >= your_char.pos_y && global_y <= your_char.pos_y + 25)) {
      console.log("clicked yourself")
      clicked.push("yourself");
      your_menu = true;
    } else if(checkOther(global_x, global_y) != false) {
      console.log("CLICK OTHER PLAYER");
      otherPlayerMenu = true;
      clicked.push("other");
    } else {
      clicked = [];
      your_menu = false;
      otherPlayerMenu = false;
    }
  }, false);
}

var checkOther = function(x, y) {
  for (var i = playerNames.length - 1; i >= 0; i--) {
    otherPlayerX = otherPlayers[playerNames[i]].pos_x;
    otherPlayerY = otherPlayers[playerNames[i]].pos_y;
    if ((x >= otherPlayerX && x<= otherPlayerX +25 ) && (y >= otherPlayerY && y<= otherPlayerY +25)) {
      return otherPlayers[playerNames[i]];
    };
    return false;
  };
}
