var determineNumberOfEnemies = function() {
  if(your_char.pos_x > SCREEN_WIDTH * 3 && your_char.pos_y  > SCREEN_HEIGHT * 2) {
    return Math.floor( (Math.random() * 3) + 1)
  } else {
    return Math.floor( (Math.random() * 4) + 1)
  }
}

var determineEnemyType = function() {
  if(your_char.pos_x > SCREEN_WIDTH * 3 && your_char.pos_y  > SCREEN_HEIGHT * 2) {
    return Math.floor( (Math.random() * 3) + 2);
  } else {
    return Math.floor( (Math.random() * 2) + 1);
  }
}

var prepareBattle = function(){
  battleId = Math.floor(Math.random() * 1000000);
  currentEnemies = [];
  slashes = [];
  bloodMarks = [];
  battleOver = false;
  inBattle = true;
  your_char.recoveryTime = 0;
  messagesLoaded = false;
  var numberOfEnemies = determineNumberOfEnemies();
  for (var i = numberOfEnemies; i > 0; i--) {
    var typeOfEnemy = determineEnemyType();
    if (typeOfEnemy === 1) {
      currentEnemies.push(enemyMake("slime"));
    } else if (typeOfEnemy === 2) {
      currentEnemies.push(enemyMake("bat"));
    } else if (typeOfEnemy === 3) {
      currentEnemies.push(enemyMake("bee"));
    } else if (typeOfEnemy === 4) {
      currentEnemies.push(enemyMake("rat"));
    } else {
      currentEnemies.push(enemyMake("missing no."));
    }
  };
  your_char.changeTarget(currentEnemies[0]);
}

var prepareTeamBattle = function(enemies){
  removeMenus();
  currentEnemies = enemies;
  slashes = [];
  bloodMarks = [];
  battleOver = false;
  inBattle = true;
  your_char.recoveryTime = 0;
  messagesLoaded = false;
  your_char.changeTarget(currentEnemies[0]);
}

var prepareBossBattle = function(boss){
  removeMenus();
  slashes = [];
  bloodMarks = [];
  battleOver = false;
  inBattle = true;
  your_char.recoveryTime = 0;
  messagesLoaded = false;
  bosses = [];
  if (boss === "trogdor") {
    bosses.push(enemyMake("trogdor"));
  } //else if (boss === "bossname") {
  //   bosses.push(enemyMake("bossname"));
  // }
  currentEnemies = bosses;
  your_char.changeTarget(currentEnemies[0]);
}

var proceedBattle = function() {
  your_char.recoveryTime--;
  your_char.processStatusEffects();
  if (inBattle === true) {
    $(".player-names").remove();
    if(battleOver === true) {
      playerOpponent = "";
      if(messagesLoaded === false) {
        victoryMessages.push('<div class="battle-message" style="position:absolute;background-color:white;top:' + SCREEN_HEIGHT / 4 + 'px;left:' + SCREEN_WIDTH / 4 + 'px;width:400px;height:200px;">YOU WIN!!</div>');
        totalxp = 0;
        for (var i = currentEnemies.length - 1; i >= 0; i--) {
          if(Math.random() < currentEnemies[i].dropRate) {
            your_char.inventory.push(currentEnemies[i].item);
            $.ajax({
              url: "/items",
              method: "POST",
              data: {item_name: currentEnemies[i].item}
            })
            var currentInventory = your_char.inventory.filter(function(item) {
              return item === currentEnemies[i].item;
            });
            victoryMessages.push('<div class="battle-message" style="position:absolute;background-color:white;top:' + SCREEN_HEIGHT / 4 + 'px;left:' + SCREEN_WIDTH / 4 + 'px;width:400px;height:200px;">Obtained ' + currentEnemies[i].item + '!<br>Now hold: ' + currentInventory.length + '</div>')
          };
          your_char.xp += currentEnemies[i].xp;
          totalxp += currentEnemies[i].xp;
        };
        calculateLevel();
        victoryMessages.push('<div class="battle-message" style="position:absolute;background-color:white;top:' + SCREEN_HEIGHT / 4 + 'px;left:' + SCREEN_WIDTH / 4 + 'px;width:400px;height:200px;">Gained '+ totalxp +' xp points!</div>')
        victoryMessages.push('<div class="battle-message" style="position:absolute;background-color:white;top:' + SCREEN_HEIGHT / 4 + 'px;left:' + SCREEN_WIDTH / 4 + 'px;width:400px;height:200px;"></div>')
        messagesLoaded = true;
        $("body").prepend(victoryMessages.shift());
        currentEnemies = [];
      }
      if(victoryMessages.length >= 1 && clearMessage === true) {
        $(".battle-message").remove();
        $("body").prepend(victoryMessages.shift());
        clearMessage = false;
      }
      if(victoryMessages.length < 1) {
        $(".battle-message").remove();
        refreshBattleDisplay();
        inBattle = false;
      }
      return;
    }
    currentBattleFrame++;
    for (var i = currentEnemies.length - 1; i >= 0; i--) {
      if(currentEnemies[i].health <= 0) {
        currentEnemies[i].setPose("dead");
        if(currentEnemies[i] === your_char.enemyTarget) {
          your_char.changeTarget(nearestLivingEnemy(-1, 1));
          // if there is no more enemies:
          if(your_char.enemyTarget.pose === "dead") {
            your_char.enemyTarget = null;
            battleOver = true;
          }
        }
      }
    }
    for (var i = currentEnemies.length - 1; i >= 0; i--) {
      if(currentEnemies[i].name != "player" && currentBattleFrame % (255 - currentEnemies[i].attackSpeed) === 0) {
        if(currentEnemies[i].pose === "standing") {
          currentEnemies[i].attackPlayer(your_char);
          currentEnemies[i].setPose("attacking");
        }
      }
    };
  }
}

setInterval(proceedBattle, FRAME_RATE);

var calculateLevel = function() {
  level = Math.floor(Math.sqrt(your_char.xp));
  if (your_char.level < level) {
    for (var i = 0; i < (level - your_char.level); i++) {
      increaseAttributes();
    };
    your_char.level = level;
  }
}

var increaseAttributes = function(){
  your_char.max_health += 100;
  your_char.health = your_char.max_health;
  your_char.attack += 100;
  your_char.defense += 100;
}
